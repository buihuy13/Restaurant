spring.application.name=user-service

#Swagger
springdoc.api-docs.path=/v3/api-docs/user-service
springdoc.swagger-ui.enabled=false
springdoc.info.title=User Service API
springdoc.info.description=API documentation for User Service
springdoc.info.version=1.0.0
springdoc.info.contact.name=Huy

spring.config.import=optional:file:.env[.properties]

jwt.secretkey=${JWT_SECRETKEY}
server.port=${PORT}
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL}
#eureka.instance.hostname=${spring.application.name}
#eureka.instance.prefer-ip-address=false
#eureka.instance.instance-id=${spring.application.name}:${random.value}

# Chỉ dùng zipkin khi deploy lên docker
# management.tracing.enabled=true
# Mở tất cả các endpoint của Actuator (health, metrics, zipkin...) qua web
# management.endpoints.web.exposure.include=*
#100% request sẽ được thu thập và gửi đi.
# management.tracing.sampling.probability=1.0
# endpoint của zipkin server
# management.zipkin.tracing.endpoint=${ZIPKIN_ENDPOINT}

spring.datasource.url=${USER_SERVICE_DB_URL}
spring.datasource.username=${USER_SERVICE_DB_USER}
spring.datasource.password=${USER_SERVICE_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.kafka.bootstrap-servers=${KAFKA_SERVER}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#OAuth2 Client
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email

google.oauth2.redirect-uri=http://localhost:8080/api/auth/google/callback

frontend.url=http://localhost:3000/login-success
